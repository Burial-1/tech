{"componentChunkName":"component---node-modules-gatsby-theme-replica-src-templates-tag-tsx","path":"/tags/promise","result":{"data":{"allMdx":{"nodes":[{"id":"02c74317-4909-5630-bc36-3a9caf838fd7","excerpt":"并行和顺序执行的前提当然是，有一堆 promise 等着你去执行……\n通常我们把这“一堆”promise 对象放到一个数组里， [promise1, promise2, promise3, ...] 我们都知道想要让 promise 按顺序执行，那就是一个接一个的 then。然而手写很多 then 太累了，而嵌套的 promise…","frontmatter":{"title":"Promise的顺序执行和并行执行","date":"2016-01-23T14:52:26.000Z","tags":["promise","parallel","sequential","顺序执行","并行执行"]},"fields":{"slug":"/2016/01/23/excecute-parallel-promise-and-sequential-promise/"},"slug":"20160123-excecute-parallel-promise-and-sequential-promise"},{"id":"abd80b36-49a3-58b7-b85b-3c1bd7f610ae","excerpt":"2016-01-24 更新 \n我还是觉得嵌套多层的 promise 是反模式，不推荐使用，机智的我学会了另一种不嵌套不递归的方法，请看这里：\n Promise 的顺序执行和并行执行 以下为原文： 之前我一直有个疑问，当我有一堆 promise 的时候，怎么按顺序执行它们呢？ 网上搜到的大多数教程都是建一个数组 array ，把 promise 对象放到数组里，然后数组中的 promise…","frontmatter":{"title":"递归实现按顺序执行Promise","date":"2016-01-18T09:23:18.000Z","tags":["promise","递归"]},"fields":{"slug":"/2016/01/18/sequentialize-promise-by-recursion/"},"slug":"20160118-sequentialize-promise-by-recursion"},{"id":"6ddf932a-e43c-5488-8077-adaf9e420f2a","excerpt":"异步模式 （嫌我话多的可以直接看分割线之后的部分…）\n以前高中的时候自己捣腾博客，一直也就只会用 JQuery 写点按钮事件什么的，连表单提交都没写过，后来误打误撞做了前端码农旧觉得 JS 的异步模式实在是太坑爹，当你搞清楚异步回调的时候，又会发现 回调地狱(Callback Hell…","frontmatter":{"title":"我所理解的Promise","date":"2015-12-01T10:46:26.000Z","tags":["promise"]},"fields":{"slug":"/2015/12/01/promise/"},"slug":"20151201-promise"}],"totalCount":3}},"pageContext":{"tag":"promise"}},"staticQueryHashes":["2873555300","67573329"]}